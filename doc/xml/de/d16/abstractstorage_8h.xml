<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.3">
  <compounddef id="de/d16/abstractstorage_8h" kind="file">
    <compoundname>abstractstorage.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="d5/d07/storableobject_8h" local="no">storableobject.h</includes>
    <includedby refid="d1/d7a/abstractui_8h" local="no">src/include/abstractui.h</includedby>
    <includedby refid="d5/d07/storableobject_8h" local="no">src/include/storableobject.h</includedby>
    <incdepgraph>
      <node id="844">
        <label>string</label>
      </node>
      <node id="845">
        <label>vector</label>
      </node>
      <node id="843">
        <label>src/include/abstractstorage.h</label>
        <link refid="abstractstorage.h"/>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
      </node>
      <node id="846">
        <label>storableobject.h</label>
        <link refid="d5/d07/storableobject_8h"/>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="848">
        <label>src/include/abstractui.h</label>
        <link refid="d1/d7a/abstractui_8h"/>
      </node>
      <node id="852">
        <label>src/include/group.h</label>
        <link refid="d3/d25/include_2group_8h"/>
      </node>
      <node id="850">
        <label>src/include/abstractgroup.h</label>
        <link refid="df/de3/abstractgroup_8h"/>
        <childnode refid="851" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
        <childnode refid="853" relation="include">
        </childnode>
      </node>
      <node id="847">
        <label>src/include/abstractstorage.h</label>
        <link refid="abstractstorage.h"/>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
      </node>
      <node id="849">
        <label>src/include/storableobject.h</label>
        <link refid="d5/d07/storableobject_8h"/>
        <childnode refid="850" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="853" relation="include">
        </childnode>
      </node>
      <node id="853">
        <label>src/include/person.h</label>
        <link refid="dc/d3e/include_2person_8h"/>
        <childnode refid="850" relation="include">
        </childnode>
      </node>
      <node id="851">
        <label>src/include/event.h</label>
        <link refid="d1/d8f/include_2event_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d6/da0/classStorage_1_1AbstractStorage" prot="public">Storage::AbstractStorage</innerclass>
    <innerclass refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument" prot="public">Storage::AbstractStorage::Argument</innerclass>
    <innernamespace refid="de/d4e/namespaceStorage">Storage</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d5/d07/storableobject_8h" kindref="compound">storableobject.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="de/d4e/namespaceStorage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Storage<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="d6/da0/classStorage_1_1AbstractStorage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/da0/classStorage_1_1AbstractStorage" kindref="compound">AbstractStorage</ref><sp/>{</highlight></codeline>
<codeline lineno="11" refid="d6/da0/classStorage_1_1AbstractStorage_1ac344c900799ce1069f4324f043f17763" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14" refid="d6/da0/classStorage_1_1AbstractStorage_1a54758736009f559baf85a2d477b4d370" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StorableObject<sp/>*&gt;<sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a54758736009f559baf85a2d477b4d370" kindref="member">objects_</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a80a7e4ab87a0326aa8b5571b09d55eaa" kindref="member">get_field_int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>field)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1ad12a3abb791ef5a696196c28e643ec22" kindref="member">get_field_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>field)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time_t<sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a87fe8d51934ab2403758d905ef313272" kindref="member">get_field_time</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>field)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1acd7e88a005b6873632c7f20245e5f3f7" kindref="member">get_field_enum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>field)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref>&amp;<sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1ac795e31d42a58c501702f443259b4d43" kindref="member">get_field_object</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>field)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;StorableObject<sp/>*&gt;<sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1ae7c30697d68dc9d7de595388030d8e10" kindref="member">get_field_vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>field)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1acdd090d0beb6a8241914e7d78a7f2c0c" kindref="member">set_field</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>field,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1acdd090d0beb6a8241914e7d78a7f2c0c" kindref="member">set_field</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>field,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>value)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1acdd090d0beb6a8241914e7d78a7f2c0c" kindref="member">set_field</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>field,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time_t<sp/>value)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a50925678c74c09acd8549a541fdbbe9f" kindref="member">set_field_enum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>field,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>value)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1acdd090d0beb6a8241914e7d78a7f2c0c" kindref="member">set_field</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>field,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref>&amp;<sp/>value)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a24af03b9a68ace199b0a6fa812abad39" kindref="member">set_field_vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>field,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;StorableObject<sp/>*&gt;<sp/>vector)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a641a6b75fe34c51943902d846ff66328" kindref="member">set_object</ref>(<ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref><sp/>*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1ab9e323067a58b74a7d1c835f0d1832c8" kindref="member">new_id</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument" kindref="compound">Argument</ref><sp/>{</highlight></codeline>
<codeline lineno="36" refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1ad48a91372dd1a9445b4ddcee0bc8336a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1ad48a91372dd1a9445b4ddcee0bc8336a" kindref="member">field</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38" refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a92adab5cf7e02947e2e75fba5e11446ca3268a68276a4ac73701de323858c945b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a92adab5cf7e02947e2e75fba5e11446ca3268a68276a4ac73701de323858c945b" kindref="member">STRING</ref>,</highlight></codeline>
<codeline lineno="39" refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a92adab5cf7e02947e2e75fba5e11446ca4f57d3a5ac601598730fb58b08c81540" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a92adab5cf7e02947e2e75fba5e11446ca4f57d3a5ac601598730fb58b08c81540" kindref="member">INTEGER</ref>,</highlight></codeline>
<codeline lineno="40" refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a92adab5cf7e02947e2e75fba5e11446ca6f9cbb024f036014248e8322253da11e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a92adab5cf7e02947e2e75fba5e11446ca6f9cbb024f036014248e8322253da11e" kindref="member">TIME</ref>,</highlight></codeline>
<codeline lineno="41" refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a92adab5cf7e02947e2e75fba5e11446ca37240303f27a558e24e9e07d1abfa215" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a92adab5cf7e02947e2e75fba5e11446ca37240303f27a558e24e9e07d1abfa215" kindref="member">ENUMERATION</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a77f04e835f26305c4222df78c07f8efd" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="43" refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1ab8ea8281cdefeb901a267261ed2e0478" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1ab8ea8281cdefeb901a267261ed2e0478" kindref="member">string</ref>;</highlight></codeline>
<codeline lineno="44" refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a6b20329db4720c44c45d8380f840dbec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a6b20329db4720c44c45d8380f840dbec" kindref="member">integer</ref>;</highlight></codeline>
<codeline lineno="45" refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1ae6cc69656647a6cccf725a0156373a51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time_t<sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1ae6cc69656647a6cccf725a0156373a51" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="d6/da0/classStorage_1_1AbstractStorage_1a73fd0acd5b0f71febf5254db391416c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a73fd0acd5b0f71febf5254db391416c0" kindref="member">AbstractStorage</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(<ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref><sp/>*<sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a21ff57c954664abb78d1d658a1da7afa" kindref="member">object</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="53" refid="d6/da0/classStorage_1_1AbstractStorage_1a108af124f19c0ae9a4a461aee6abc3ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref><sp/>*<sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a108af124f19c0ae9a4a461aee6abc3ec" kindref="member">create</ref>(std::vector&lt;const<sp/>Argument<sp/>*&gt;&amp;<sp/>parameters)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(<ref refid="d6/da0/classStorage_1_1AbstractStorage_1ab9e323067a58b74a7d1c835f0d1832c8" kindref="member">new_id</ref>(),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a641a6b75fe34c51943902d846ff66328" kindref="member">set_object</ref>(dynamic_cast&lt;StorableObject<sp/>*&gt;(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>parameters.begin();<sp/>it<sp/>!=<sp/>parameters.end();<sp/>it++)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>((*it)-&gt;type)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a92adab5cf7e02947e2e75fba5e11446ca3268a68276a4ac73701de323858c945b" kindref="member">Argument::STRING</ref>:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1acdd090d0beb6a8241914e7d78a7f2c0c" kindref="member">set_field</ref>((dynamic_cast&lt;StorableObject<sp/>*&gt;(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">))-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;field,<sp/>(*it)-&gt;string);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a92adab5cf7e02947e2e75fba5e11446ca4f57d3a5ac601598730fb58b08c81540" kindref="member">Argument::INTEGER</ref>:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1acdd090d0beb6a8241914e7d78a7f2c0c" kindref="member">set_field</ref>((dynamic_cast&lt;StorableObject<sp/>*&gt;(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">))-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;field,<sp/>(*it)-&gt;integer);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a92adab5cf7e02947e2e75fba5e11446ca6f9cbb024f036014248e8322253da11e" kindref="member">Argument::TIME</ref>:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1acdd090d0beb6a8241914e7d78a7f2c0c" kindref="member">set_field</ref>((dynamic_cast&lt;StorableObject<sp/>*&gt;(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">))-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;field,<sp/>(*it)-&gt;time);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument_1a92adab5cf7e02947e2e75fba5e11446ca37240303f27a558e24e9e07d1abfa215" kindref="member">Argument::ENUMERATION</ref>:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a50925678c74c09acd8549a541fdbbe9f" kindref="member">set_field_enum</ref>((dynamic_cast&lt;StorableObject<sp/>*&gt;(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">))-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;field,<sp/>(*it)-&gt;string);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="d6/da0/classStorage_1_1AbstractStorage_1a21ff57c954664abb78d1d658a1da7afa" kindref="member">object</ref>))-&gt;load();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="d6/da0/classStorage_1_1AbstractStorage_1a21ff57c954664abb78d1d658a1da7afa" kindref="member">object</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;StorableObject<sp/>*&gt;&amp;<sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1ac85363cc08204d6158d6f68d7c51764a" kindref="member">search</ref>(std::vector&lt;Argument<sp/>*&gt;&amp;<sp/>parameters)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="d6/da0/classStorage_1_1AbstractStorage_1a21ff57c954664abb78d1d658a1da7afa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref><sp/>*<sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a21ff57c954664abb78d1d658a1da7afa" kindref="member">object</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d6/da0/classStorage_1_1AbstractStorage_1a54758736009f559baf85a2d477b4d370" kindref="member">objects_</ref>[id];<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alex/code/UniSched/src/include/abstractstorage.h"/>
  </compounddef>
</doxygen>
