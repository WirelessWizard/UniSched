<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.3">
  <compounddef id="d6/da0/classStorage_1_1AbstractStorage" kind="class" prot="public">
    <compoundname>Storage::AbstractStorage</compoundname>
    <derivedcompoundref refid="d0/df2/classDummyStorage" prot="public" virt="non-virtual">DummyStorage</derivedcompoundref>
    <includes refid="de/d16/abstractstorage_8h" local="no">abstractstorage.h</includes>
    <innerclass refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument" prot="public">Storage::AbstractStorage::Argument</innerclass>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d6/da0/classStorage_1_1AbstractStorage_1ac344c900799ce1069f4324f043f17763" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class StorableObject</definition>
        <argsstring></argsstring>
        <name>StorableObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="11" bodyfile="/home/alex/code/UniSched/src/include/abstractstorage.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d6/da0/classStorage_1_1AbstractStorage_1a54758736009f559baf85a2d477b4d370" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref> * &gt;</type>
        <definition>std::vector&lt;StorableObject *&gt; Storage::AbstractStorage::objects_</definition>
        <argsstring></argsstring>
        <name>objects_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="14" bodyfile="/home/alex/code/UniSched/src/include/abstractstorage.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1a80a7e4ab87a0326aa8b5571b09d55eaa" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const int</type>
        <definition>virtual const int Storage::AbstractStorage::get_field_int</definition>
        <argsstring>(const int id, const std::string field) const =0</argsstring>
        <name>get_field_int</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1a275263eba82a652005292f01a120af8e">get_field_int</reimplementedby>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="16"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1ad12a3abb791ef5a696196c28e643ec22" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::string</type>
        <definition>virtual const std::string Storage::AbstractStorage::get_field_string</definition>
        <argsstring>(const int id, const std::string field) const =0</argsstring>
        <name>get_field_string</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1a410ef9d239193e25f830c49140e18293">get_field_string</reimplementedby>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="17"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1a87fe8d51934ab2403758d905ef313272" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const time_t</type>
        <definition>virtual const time_t Storage::AbstractStorage::get_field_time</definition>
        <argsstring>(const int id, const std::string field) const =0</argsstring>
        <name>get_field_time</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1a978ef9d688175e3739bb478f4c9b5313">get_field_time</reimplementedby>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="18"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1acd7e88a005b6873632c7f20245e5f3f7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::string</type>
        <definition>virtual const std::string Storage::AbstractStorage::get_field_enum</definition>
        <argsstring>(const int id, const std::string field) const =0</argsstring>
        <name>get_field_enum</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1a1101739c23fbf79b009558553180ef1a">get_field_enum</reimplementedby>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="19"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1ac795e31d42a58c501702f443259b4d43" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref> &amp;</type>
        <definition>virtual const StorableObject&amp; Storage::AbstractStorage::get_field_object</definition>
        <argsstring>(const int id, const std::string field) const =0</argsstring>
        <name>get_field_object</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1a62ead126a3be7736995227fcb3a7e5cd">get_field_object</reimplementedby>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="20"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1ae7c30697d68dc9d7de595388030d8e10" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::vector&lt; <ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref> * &gt;</type>
        <definition>virtual const std::vector&lt;StorableObject *&gt; Storage::AbstractStorage::get_field_vector</definition>
        <argsstring>(const int id, const std::string field) const =0</argsstring>
        <name>get_field_vector</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1afe36af3f3147027ebb6447192201c790">get_field_vector</reimplementedby>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="21"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1acdd090d0beb6a8241914e7d78a7f2c0c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Storage::AbstractStorage::set_field</definition>
        <argsstring>(const int id, const std::string field, const int value)=0</argsstring>
        <name>set_field</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1ab22488d00b8969af5356bc344672bd18">set_field</reimplementedby>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>field</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="23"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1ae5ee00e647f121b68ebada0f094058bc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Storage::AbstractStorage::set_field</definition>
        <argsstring>(const int id, const std::string field, const std::string value)=0</argsstring>
        <name>set_field</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1aaa0d3249ea3207fae78253b191b80854">set_field</reimplementedby>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>field</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="24"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1a50ee4a829bc067a9291a11aa99ec0f16" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Storage::AbstractStorage::set_field</definition>
        <argsstring>(const int id, const std::string field, const time_t value)=0</argsstring>
        <name>set_field</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1a51662a853e821fda1828e8756d58f1df">set_field</reimplementedby>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>field</declname>
        </param>
        <param>
          <type>const time_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="25"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1a50925678c74c09acd8549a541fdbbe9f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Storage::AbstractStorage::set_field_enum</definition>
        <argsstring>(const int id, const std::string field, const std::string value)=0</argsstring>
        <name>set_field_enum</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1a0655a6f7c822adbe174d1c7fe7c9ea34">set_field_enum</reimplementedby>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>field</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="26"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1a3a92c35a35f7c2d798f5455ec8156d15" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Storage::AbstractStorage::set_field</definition>
        <argsstring>(const int id, const std::string field, const StorableObject &amp;value)=0</argsstring>
        <name>set_field</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1ac1674d9c4106af70139f4672a8702285">set_field</reimplementedby>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>field</declname>
        </param>
        <param>
          <type>const <ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="27"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1a24af03b9a68ace199b0a6fa812abad39" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Storage::AbstractStorage::set_field_vector</definition>
        <argsstring>(const int id, const std::string field, const std::vector&lt; StorableObject * &gt; vector)=0</argsstring>
        <name>set_field_vector</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1a6102ef89119b0ee1525439b3fd7043ce">set_field_vector</reimplementedby>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>field</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref> * &gt;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="28"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1a641a6b75fe34c51943902d846ff66328" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void AbstractStorage::set_object</definition>
        <argsstring>(StorableObject *object)</argsstring>
        <name>set_object</name>
        <param>
          <type><ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="30" bodyfile="/home/alex/code/UniSched/src/storage/abstractstorage.cpp" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1ab9e323067a58b74a7d1c835f0d1832c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const int</type>
        <definition>const int AbstractStorage::new_id</definition>
        <argsstring>()</argsstring>
        <name>new_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="32" bodyfile="/home/alex/code/UniSched/src/storage/abstractstorage.cpp" bodystart="10" bodyend="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1a73fd0acd5b0f71febf5254db391416c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Storage::AbstractStorage::AbstractStorage</definition>
        <argsstring>()</argsstring>
        <name>AbstractStorage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="48" bodyfile="/home/alex/code/UniSched/src/include/abstractstorage.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1a5d114117d4954e01fd650251b829fdbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AbstractStorage::remove</definition>
        <argsstring>(StorableObject *object)</argsstring>
        <name>remove</name>
        <param>
          <type><ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="50" bodyfile="/home/alex/code/UniSched/src/storage/abstractstorage.cpp" bodystart="5" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1a108af124f19c0ae9a4a461aee6abc3ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref> *</type>
        <definition>StorableObject* Storage::AbstractStorage::create</definition>
        <argsstring>(std::vector&lt; const Argument * &gt; &amp;parameters)</argsstring>
        <name>create</name>
        <param>
          <type>std::vector&lt; const <ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument" kindref="compound">Argument</ref> * &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="54" bodyfile="/home/alex/code/UniSched/src/include/abstractstorage.h" bodystart="53" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1ac85363cc08204d6158d6f68d7c51764a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; <ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref> * &gt; &amp;</type>
        <definition>virtual std::vector&lt;StorableObject *&gt;&amp; Storage::AbstractStorage::search</definition>
        <argsstring>(std::vector&lt; Argument * &gt; &amp;parameters)=0</argsstring>
        <name>search</name>
        <reimplementedby refid="d0/df2/classDummyStorage_1abef91708b67fec5a4b35e073a19c8b2a">search</reimplementedby>
        <param>
          <type>std::vector&lt; <ref refid="d9/dc9/structStorage_1_1AbstractStorage_1_1Argument" kindref="compound">Argument</ref> * &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="87"/>
      </memberdef>
      <memberdef kind="function" id="d6/da0/classStorage_1_1AbstractStorage_1a21ff57c954664abb78d1d658a1da7afa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d4/deb/classStorage_1_1StorableObject" kindref="compound">StorableObject</ref> *</type>
        <definition>virtual StorableObject* Storage::AbstractStorage::object</definition>
        <argsstring>(const int id) const </argsstring>
        <name>object</name>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="89" bodyfile="/home/alex/code/UniSched/src/include/abstractstorage.h" bodystart="89" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10">
        <label>Storage::AbstractStorage</label>
        <link refid="d6/da0/classStorage_1_1AbstractStorage"/>
      </node>
      <node id="11">
        <label>DummyStorage</label>
        <link refid="d0/df2/classDummyStorage"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/alex/code/UniSched/src/include/abstractstorage.h" line="10" bodyfile="/home/alex/code/UniSched/src/include/abstractstorage.h" bodystart="10" bodyend="90"/>
    <listofallmembers>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1a73fd0acd5b0f71febf5254db391416c0" prot="public" virt="non-virtual"><scope>Storage::AbstractStorage</scope><name>AbstractStorage</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1a108af124f19c0ae9a4a461aee6abc3ec" prot="public" virt="non-virtual"><scope>Storage::AbstractStorage</scope><name>create</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1acd7e88a005b6873632c7f20245e5f3f7" prot="protected" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>get_field_enum</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1a80a7e4ab87a0326aa8b5571b09d55eaa" prot="protected" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>get_field_int</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1ac795e31d42a58c501702f443259b4d43" prot="protected" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>get_field_object</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1ad12a3abb791ef5a696196c28e643ec22" prot="protected" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>get_field_string</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1a87fe8d51934ab2403758d905ef313272" prot="protected" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>get_field_time</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1ae7c30697d68dc9d7de595388030d8e10" prot="protected" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>get_field_vector</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1ab9e323067a58b74a7d1c835f0d1832c8" prot="protected" virt="virtual"><scope>Storage::AbstractStorage</scope><name>new_id</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1a21ff57c954664abb78d1d658a1da7afa" prot="public" virt="virtual"><scope>Storage::AbstractStorage</scope><name>object</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1a54758736009f559baf85a2d477b4d370" prot="protected" virt="non-virtual"><scope>Storage::AbstractStorage</scope><name>objects_</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1a5d114117d4954e01fd650251b829fdbf" prot="public" virt="non-virtual"><scope>Storage::AbstractStorage</scope><name>remove</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1ac85363cc08204d6158d6f68d7c51764a" prot="public" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>search</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1acdd090d0beb6a8241914e7d78a7f2c0c" prot="protected" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>set_field</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1ae5ee00e647f121b68ebada0f094058bc" prot="protected" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>set_field</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1a50ee4a829bc067a9291a11aa99ec0f16" prot="protected" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>set_field</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1a3a92c35a35f7c2d798f5455ec8156d15" prot="protected" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>set_field</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1a50925678c74c09acd8549a541fdbbe9f" prot="protected" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>set_field_enum</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1a24af03b9a68ace199b0a6fa812abad39" prot="protected" virt="pure-virtual"><scope>Storage::AbstractStorage</scope><name>set_field_vector</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1a641a6b75fe34c51943902d846ff66328" prot="protected" virt="virtual"><scope>Storage::AbstractStorage</scope><name>set_object</name></member>
      <member refid="d6/da0/classStorage_1_1AbstractStorage_1ac344c900799ce1069f4324f043f17763" prot="private" virt="non-virtual"><scope>Storage::AbstractStorage</scope><name>StorableObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
